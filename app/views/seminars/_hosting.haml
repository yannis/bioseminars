- if hosting.new_record?
  = fields_for "seminar[hostings_attributes][#{hosting.object_id}]" do |fs|
    .inline_in_form.group{:id => "hosting_#{hosting.object_id}"}
      .label_and_input
        .label
          Chose an existing hosting
        = select_tag "seminar[hosting_ids][]", "<option value=''>-</option>".html_safe+options_from_collection_for_select(Host.all, :id, :name), :style => 'clear: left'
        = fs.my_error_message_on :id, :object =>  hosting
      .label_and_input.or_create
        or create one:
      .label_and_input
        = fs.label :name, "<span class='red_asterisk'>*</span> Name".html_safe, :object => hosting
        = fs.text_field :name, :class => 'hosting_name'
        = fs.my_error_message_on :name, :object =>  hosting
      .label_and_input
        = fs.label :email, "<span class='red_asterisk'>*</span> Email".html_safe
        = fs.text_field :email, :class => 'hosting_email', :onchange => "get_name_from_email(this, '#{fs.object_name.gsub('][', '_').gsub('[', '_').gsub(']', '')}_name')", :onfocus => "get_name_from_email(this, '#{fs.object_name.gsub('][', '_').gsub('[', '_').gsub(']', '')}_name')"
        = fs.my_error_message_on :email, :object =>  hosting
      .label_and_input.remove_link
        = link_to_function 'Remove', "$('hosting_#{hosting.object_id}').remove()"
- else
  = fields_for "seminar[hostings_attributes][#{hosting.id}]", hosting do |fs|
    .inline_in_form.group
      .label_and_input
        = select_tag "seminar[hosting_ids][]", "<option value=''>- remove -</option>".html_safe+options_from_collection_for_select(Host.all, :id, :name, hosting.id)
        = fs.my_error_message_on :id, :object =>  hosting