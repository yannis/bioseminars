.seminar[seminar]{:class => ((params[:action] == 'index' and params[:controller] == 'seminars') ? "seminar_#{seminar.id} #{seminar.internal? ? 'internal' : 'public'} category_#{seminar.category.id} #{seminar.all_day? ? 'all_day' : ''} #{((seminar.internal? and show_internal_seminars? and (show_category?(seminar.category))) or (!seminar.internal? and show_category?(seminar.category))) ? '' : 'hidden_seminar'} " : '')}
  .time_and_location
    - unless seminar.category.color.blank?
      %span.color{:style => "background-color: ##{seminar.category.color}"}
    %span
      - infos = [seminar.category.name, seminar.schedule]
      - infos << seminar.location.name_and_building if seminar.location
      = infos.join(' - ')
  .title_and_content
    - if seminar.internal?
      %p.alert_internal
        This seminar is not public
    - unless seminar.mini_seminar_title.blank?
      - if show?
        %h2= seminar.mini_seminar_title
      - else
        %h3= seminar.mini_seminar_title
    - if seminar.only_one_speaker?
      %p
        %span.by
          by
        =raw seminar.speakers.map{|s| s.bold_name_and_affiliation}.join(', ')
    - else
      %dl
        - for speaker in seminar.speakers
          %dt
            = speaker.title
          %dd
            %span.by
              by
            =raw speaker.name_and_affiliation
    - unless seminar.hosts.empty?
      %p
        Hosted by
        =raw seminar.hosts.map{|s| mail_to(s.email, s.name, :encode => 'hex')}.join(', ')
    - unless seminar.description.blank?
      %p
        = seminar.description
    - unless seminar.documents.blank?
      #documents
        %h3
          Attached documents
        %ul
          - for doc in seminar.documents
            %li
              = doc.data_file_name
              =raw "#{link_to '('+number_to_human_size(doc.data_file_size)+')', doc.data.url }"
       
    - unless seminar.pictures.blank?      
      %ul#pictures.group
        - for pic in seminar.pictures
          %li
            = link_to(image_tag(pic.data.url(:thumb)), pic.data.url, :id => "link_to_picture_#{pic.id}", :rel => 'lightbox')
    - unless seminar.publications.blank?
      .seminar_publications{:id => "publications_for_seminar_#{seminar.id}"}
        %noscript
          = link_to "#{pluralize(seminar.publications.size, 'publication')} are associated with this seminar", "http://www.ncbi.nlm.nih.gov/pubmed/#{seminar.publications.map(&:pmid).join(',')}"
        %p#big_ajax_loader
          Publications loading ...
          = image_tag 'ajax-loader_big.gif'
    - unless seminar.user.blank?
      %p.creator{:style => 'font-size: smaller'}
        Created by
        = seminar.user.name
    %p.admin_links
      - links = [link_to('Save in iCal', seminar_path(seminar, :format => 'ics'))]
      - links << link_to('Website', seminar.url) unless seminar.url.blank?
      - links << link_to('Details', seminar_path(seminar)) unless action?('show') && controller?('seminars')
      - links << edit_link(seminar) if can? :update, seminar
      - links << destroy_link(seminar) if can? :destroy, seminar
      =raw links.join(' Â· ')