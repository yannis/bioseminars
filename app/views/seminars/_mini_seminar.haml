- if seminar.only_one_speaker?
  %p
    by
    =raw seminar.speakers.map{|s| s.bold_name_and_affiliation}.join(', ')
- else
  %dl
    - for speaker in seminar.speakers
      %dt
        = speaker.title
      %dd  
        %span.by
          by
        =raw speaker.name_and_affiliation
- if seminar.internal?
  %p.alert_internal
    This seminar is not public
%p
  = seminar.when_and_where
- unless seminar.hosts.empty?
  %p
    Hosted by
    = seminar.hosts.map{|s| mail_to(s.email, s.name, :encode => 'hex')}.join(', ').html_safe
- unless seminar.documents.blank? and seminar.pictures.blank? and seminar.publications.blank?
  %p
    - message = []
    - message << pluralize(seminar.documents.size, 'document') unless seminar.documents.blank?
    - message << pluralize(seminar.pictures.size, 'picture') unless seminar.pictures.blank?
    - message << pluralize(seminar.publications.size, 'publication') unless seminar.publications.blank?
    = link_to message.join(', ')+' are attached to this seminar', seminar_path(seminar)
%p.admin_links
  - links = [link_to('Details', seminar_path(seminar))]
  - links << link_to('Website', seminar.url) unless seminar.url.blank?
  - links << link_to('Save in iCal', seminar_path(seminar, :format => 'ics'))
  - links << edit_link(seminar) if can?(:update, seminar)
  - links << destroy_link(seminar) if can?(:destroy, seminar)
  =raw links.join(' Â· ')
- unless seminar.user.blank?
  %p{:style => 'margin: 0 .1em; padding: 0; font-size: smaller; text-align: right'}
    Created by
    = seminar.user.name